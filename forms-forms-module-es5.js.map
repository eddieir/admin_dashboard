{"version":3,"sources":["webpack:///./src/app/routes/forms/dynamic/dynamic.component.html","webpack:///./src/app/routes/forms/elements/elements.component.html","webpack:///./src/app/routes/forms/selects/selects.component.html","webpack:///./src/app/routes/forms/data.service.ts","webpack:///./src/app/routes/forms/dynamic/dynamic.component.ts","webpack:///./src/app/routes/forms/elements/elements.component.ts","webpack:///./src/app/routes/forms/forms-routing.module.ts","webpack:///./src/app/routes/forms/forms.module.ts","webpack:///./src/app/routes/forms/selects/selects.component.ts"],"names":[],"mappings":"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","file":"forms-forms-module-es5.js","sourcesContent":["module.exports = \"<page-header></page-header>\\n\\n<mat-card>\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n    <formly-form [form]=\\\"form\\\" [fields]=\\\"fields\\\" [model]=\\\"model\\\"></formly-form>\\n    <button mat-raised-button color=\\\"primary\\\">Submit</button>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<page-header></page-header>\\n\\n<div fxLayout=\\\"row wrap\\\" class=\\\"matero-row\\\">\\n  <div fxFlex=\\\"100\\\" class=\\\"matero-col\\\">\\n    <mat-card>\\n      <mat-card-title>Form Inline</mat-card-title>\\n\\n      <form>\\n        <mat-form-field class=\\\"m-r-8\\\">\\n          <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"q.username\\\" name=\\\"username\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"m-r-8\\\">\\n          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"q.email\\\" name=\\\"email\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"m-r-8\\\">\\n          <mat-label>Gender</mat-label>\\n          <mat-select [(ngModel)]=\\\"q.gender\\\" name=\\\"gender\\\">\\n            <mat-option>-- None --</mat-option>\\n            <mat-option value=\\\"1\\\">male</mat-option>\\n            <mat-option value=\\\"2\\\">female</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <button mat-raised-button color=\\\"primary\\\">Search</button>\\n      </form>\\n      {{q|json}}\\n\\n    </mat-card>\\n  </div>\\n  <div fxFlex=\\\"33.33\\\" fxFlex.lt-sm=\\\"100\\\" class=\\\"matero-col\\\">\\n    <mat-card>\\n      <mat-card-title>Form Horizontal</mat-card-title>\\n\\n      <form [formGroup]=\\\"reactiveForm1\\\" class=\\\"matero-form-horizontal\\\">\\n        <mat-form-field>\\n          <mat-label>Username</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"username\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('username').invalid\\\">Please enter username\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Email</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"email\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('email').invalid\\\">\\n            {{getErrorMessage(reactiveForm1)}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Gender</mat-label>\\n          <mat-select required formControlName=\\\"gender\\\" required>\\n            <mat-option>-- None --</mat-option>\\n            <mat-option value=\\\"1\\\">male</mat-option>\\n            <mat-option value=\\\"2\\\">female</mat-option>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('gender').invalid\\\">Please select gender</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>City</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"city\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('city').invalid\\\">Please enter city</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Address</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"address\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('address').invalid\\\">Please enter address</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Company</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"company\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('company').invalid\\\">Please enter company</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Mobile</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" type=\\\"number\\\" formControlName=\\\"mobile\\\"\\n                 required>\\n          <mat-icon matSuffix>smartphone</mat-icon>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('mobile').invalid\\\">Please enter mobile</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Tele</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" type=\\\"number\\\" formControlName=\\\"tele\\\"\\n                 required>\\n          <mat-icon matSuffix>phone</mat-icon>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('tele').invalid\\\">Please enter tele</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-label>Website</mat-label>\\n          <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"website\\\" required>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('website').invalid\\\">Please enter website</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"\\n                 formControlName=\\\"date\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n          <mat-error *ngIf=\\\"reactiveForm1.get('date').invalid\\\">Please enter website</mat-error>\\n        </mat-form-field>\\n\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-t-8\\\">Save</button>\\n      </form>\\n      {{reactiveForm1.value|json}}\\n\\n    </mat-card>\\n  </div>\\n\\n  <div fxFlex=\\\"66.67\\\" fxFlex.lt-sm=\\\"100\\\" class=\\\"matero-col\\\">\\n    <mat-card>\\n      <mat-card-title>Form Horizontal</mat-card-title>\\n\\n      <form [formGroup]=\\\"reactiveForm2\\\" class=\\\"matero-form-horizontal\\\">\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"8px grid\\\">\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Username</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"username\\\"\\n                     required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('username').invalid\\\">Please enter username\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Email</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('email').invalid\\\">\\n                {{getErrorMessage(reactiveForm2)}}</mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Gender</mat-label>\\n              <mat-select required formControlName=\\\"gender\\\" required>\\n                <mat-option>-- None --</mat-option>\\n                <mat-option value=\\\"1\\\">male</mat-option>\\n                <mat-option value=\\\"2\\\">female</mat-option>\\n              </mat-select>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('gender').invalid\\\">Please select gender\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>City</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"city\\\" required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('city').invalid\\\">Please enter city</mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Address</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"address\\\" required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('address').invalid\\\">Please enter address\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Company</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"company\\\" required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('company').invalid\\\">Please enter company\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Mobile</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" type=\\\"number\\\"\\n                     formControlName=\\\"mobile\\\" required>\\n              <mat-icon matSuffix>smartphone</mat-icon>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('mobile').invalid\\\">Please enter mobile\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Tele</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" type=\\\"number\\\"\\n                     formControlName=\\\"tele\\\" required>\\n              <mat-icon matSuffix>phone</mat-icon>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('tele').invalid\\\">Please enter tele</mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <mat-label>Website</mat-label>\\n              <input matInput placeholder=\\\"Simple placeholder\\\" formControlName=\\\"website\\\" required>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('website').invalid\\\">Please enter website\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"50\\\" fxFlex.lt-sm=\\\"100\\\">\\n            <mat-form-field>\\n              <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Choose a date\\\"\\n                     formControlName=\\\"date\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker2></mat-datepicker>\\n              <mat-error *ngIf=\\\"reactiveForm2.get('date').invalid\\\">Please enter website\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n        </div>\\n\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"m-t-8\\\">Save</button>\\n\\n      </form>\\n      {{reactiveForm2.value|json}}\\n\\n    </mat-card>\\n  </div>\\n\\n</div>\"","module.exports = \"<page-header></page-header>\\n\\n<div fxLayout=\\\"row wrap\\\" class=\\\"matero-row\\\">\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"matero-col\\\">\\n    <mat-card>\\n      <mat-card-title>Data Source</mat-card-title>\\n      <div>\\n        <p>\\n          Most common case is showing data from backend\\n          API and with ng-select this is extremely simple since you can bind directly to\\n          observable when using angular <b> | async</b> pipe\\n        </p>\\n        <ng-select [items]=\\\"people$ | async\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" autofocus\\n                   [(ngModel)]=\\\"selectedPersonId\\\"\\n                   placeholder=\\\"select person\\\">\\n        </ng-select>\\n        Selected: {{selectedPersonId}}\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n        <p>\\n          You can also set array of objects as items input\\n        </p>\\n        <ng-select [items]=\\\"people\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [(ngModel)]=\\\"selectedPersonId2\\\"\\n                   placeholder=\\\"select person\\\">\\n        </ng-select>\\n        Selected: {{selectedPersonId2}}\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n        <p>\\n          While array of objects is the most common items source, you may want to set simple array\\n          of strings,\\n          numbers, booleans\\n        </p>\\n        <ng-select [items]=\\\"simpleItems\\\" [(ngModel)]=\\\"selectedSimpleItem\\\">\\n        </ng-select>\\n        Selected: {{selectedSimpleItem | json}}\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n        <p>\\n          If you have simple use case, you can omit items array and bind options directly in html\\n          using\\n          <b>ng-option</b> component.\\n        </p>\\n        <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"toggleDisabled()\\\"\\n                class=\\\"m-b-8\\\">Toggle\\n          option[1] disabled</button>\\n\\n        <ng-select [(ngModel)]=\\\"selectedCarId\\\" placeholder=\\\"select car\\\">\\n          <ng-option *ngFor=\\\"let car of cars\\\" [value]=\\\"car.id\\\" [disabled]=\\\"car.disabled\\\">\\n            {{car.name}}</ng-option>\\n          <ng-option [value]=\\\"'custom'\\\">Custom</ng-option>\\n        </ng-select>\\n\\n        Selected car ID: {{selectedCarId | json}}\\n      </div>\\n    </mat-card>\\n  </div>\\n\\n  <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"matero-col\\\">\\n    <mat-card>\\n      <mat-card-title>Tags</mat-card-title>\\n      <div>\\n        <label>Default tags</label>\\n\\n        <ng-select [items]=\\\"[]\\\" [addTag]=\\\"true\\\" [(ngModel)]=\\\"selectedCompany\\\">\\n        </ng-select>\\n\\n        <p>\\n          Selected value: {{selectedCompany | json}}\\n        </p>\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n\\n        <label>Custom tags</label>\\n\\n        <ng-select [items]=\\\"companies\\\" [addTag]=\\\"addTag\\\" [hideSelected]=\\\"true\\\" multiple=\\\"true\\\"\\n                   bindLabel=\\\"name\\\"\\n                   [(ngModel)]=\\\"selectedCompanyCustom\\\">\\n        </ng-select>\\n\\n        <p>\\n          Selected value: {{selectedCompanyCustom | json}}\\n        </p>\\n\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n        <label>Server side tags</label>\\n\\n        <ng-select [items]=\\\"companies\\\" [addTag]=\\\"addTagPromise\\\" multiple=\\\"true\\\" bindLabel=\\\"name\\\"\\n                   [loading]=\\\"loading\\\"\\n                   [(ngModel)]=\\\"selectedCompanyCustomPromise\\\">\\n\\n          <ng-template ng-tag-tmp let-search=\\\"searchTerm\\\">\\n            <b>create new</b>: {{search}}\\n          </ng-template>\\n        </ng-select>\\n\\n        <mat-divider class=\\\"m-y-16\\\" inset></mat-divider>\\n\\n        <label>Tagging without dropdown. Press enter to add item</label>\\n\\n        <ng-select [items]=\\\"[]\\\" [addTag]=\\\"true\\\" [multiple]=\\\"true\\\" [selectOnTab]=\\\"true\\\"\\n                   [isOpen]=\\\"false\\\">\\n        </ng-select>\\n\\n      </div>\\n    </mat-card>\\n  </div>\\n</div>\"","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Person {\n  id: string;\n  isActive: boolean;\n  age: number;\n  name: string;\n  gender: string;\n  company: string;\n  email: string;\n  phone: string;\n  disabled?: boolean;\n}\n\n@Injectable()\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getGithubAccounts(term: string = null) {\n    if (term) {\n      return this.http\n        .get<any>(`https://api.github.com/search/users?q=${term}`)\n        .pipe(map(rsp => rsp.items));\n    } else {\n      return of([]);\n    }\n  }\n\n  getAlbums() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\n  }\n\n  getPhotos() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\n  }\n\n  getPeople(term: string = null): Observable<Person[]> {\n    let items = getMockPeople();\n    if (term) {\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n    }\n    return of(items).pipe(delay(500));\n  }\n}\n\nfunction getMockPeople() {\n  return [\n    {\n      id: '5a15b13c36e7a7f00cf0d7cb',\n      index: 2,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 23,\n      name: 'Karyn Wright',\n      gender: 'female',\n      company: 'ZOLAR',\n      email: 'karynwright@zolar.com',\n      phone: '+1 (851) 583-2547',\n    },\n    {\n      id: '5a15b13c2340978ec3d2c0ea',\n      index: 3,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 35,\n      name: 'Rochelle Estes',\n      disabled: true,\n      gender: 'female',\n      company: 'EXTRAWEAR',\n      email: 'rochelleestes@extrawear.com',\n      phone: '+1 (849) 408-2029',\n    },\n    {\n      id: '5a15b13c663ea0af9ad0dae8',\n      index: 4,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Mendoza Ruiz',\n      gender: 'male',\n      company: 'ZYTRAX',\n      email: 'mendozaruiz@zytrax.com',\n      phone: '+1 (904) 536-2020',\n    },\n    {\n      id: '5a15b13cc9eeb36511d65acf',\n      index: 5,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 39,\n      name: 'Rosales Russell',\n      gender: 'male',\n      company: 'ELEMANTRA',\n      email: 'rosalesrussell@elemantra.com',\n      phone: '+1 (868) 473-3073',\n    },\n    {\n      id: '5a15b13c728cd3f43cc0fe8a',\n      index: 6,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Marquez Nolan',\n      gender: 'male',\n      company: 'MIRACLIS',\n      disabled: true,\n      email: 'marqueznolan@miraclis.com',\n      phone: '+1 (853) 571-3921',\n    },\n    {\n      id: '5a15b13ca51b0aaf8a99c05a',\n      index: 7,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 28,\n      name: 'Franklin James',\n      gender: 'male',\n      company: 'CAXT',\n      email: 'franklinjames@caxt.com',\n      phone: '+1 (868) 539-2984',\n    },\n    {\n      id: '5a15b13cc3b9381ffcb1d6f7',\n      index: 8,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Elsa Bradley',\n      gender: 'female',\n      company: 'MATRIXITY',\n      email: 'elsabradley@matrixity.com',\n      phone: '+1 (994) 583-3850',\n    },\n    {\n      id: '5a15b13ce58cb6ff62c65164',\n      index: 9,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 40,\n      name: 'Pearson Thompson',\n      gender: 'male',\n      company: 'EZENT',\n      email: 'pearsonthompson@ezent.com',\n      phone: '+1 (917) 537-2178',\n    },\n    {\n      id: '5a15b13c90b95eb68010c86e',\n      index: 10,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Ina Pugh',\n      gender: 'female',\n      company: 'MANTRIX',\n      email: 'inapugh@mantrix.com',\n      phone: '+1 (917) 450-2372',\n    },\n    {\n      id: '5a15b13c2b1746e12788711f',\n      index: 11,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Nguyen Elliott',\n      gender: 'male',\n      company: 'PORTALINE',\n      email: 'nguyenelliott@portaline.com',\n      phone: '+1 (905) 491-3377',\n    },\n    {\n      id: '5a15b13c605403381eec5019',\n      index: 12,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 31,\n      name: 'Mills Barnett',\n      gender: 'male',\n      company: 'FARMEX',\n      email: 'millsbarnett@farmex.com',\n      phone: '+1 (882) 462-3986',\n    },\n    {\n      id: '5a15b13c67e2e6d1a3cd6ca5',\n      index: 13,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 36,\n      name: 'Margaret Reynolds',\n      gender: 'female',\n      company: 'ROOFORIA',\n      email: 'margaretreynolds@rooforia.com',\n      phone: '+1 (935) 435-2345',\n    },\n    {\n      id: '5a15b13c947c836d177aa85c',\n      index: 14,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 29,\n      name: 'Yvette Navarro',\n      gender: 'female',\n      company: 'KINETICA',\n      email: 'yvettenavarro@kinetica.com',\n      phone: '+1 (807) 485-3824',\n    },\n    {\n      id: '5a15b13c5dbbe61245c1fb73',\n      index: 15,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 20,\n      name: 'Elisa Guzman',\n      gender: 'female',\n      company: 'KAGE',\n      email: 'elisaguzman@kage.com',\n      phone: '+1 (868) 594-2919',\n    },\n    {\n      id: '5a15b13c38fd49fefea8db80',\n      index: 16,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 33,\n      name: 'Jodie Bowman',\n      gender: 'female',\n      company: 'EMTRAC',\n      email: 'jodiebowman@emtrac.com',\n      phone: '+1 (891) 565-2560',\n    },\n    {\n      id: '5a15b13c9680913c470eb8fd',\n      index: 17,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Diann Booker',\n      gender: 'female',\n      company: 'LYRIA',\n      email: 'diannbooker@lyria.com',\n      phone: '+1 (830) 555-3209',\n    },\n  ];\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-forms-dynamic',\n  templateUrl: './dynamic.component.html',\n})\nexport class FormsDynamicComponent implements OnInit {\n  form = new FormGroup({});\n  model = { email: 'email@gmail.com' };\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'text',\n      type: 'input',\n      templateOptions: {\n        label: 'Text',\n        placeholder: 'Type here to see the other field become enabled...',\n      },\n    },\n    {\n      key: 'text2',\n      type: 'input',\n      templateOptions: {\n        label: 'Hey!',\n        placeholder: 'This one is disabled if there is no text in the other input',\n      },\n      expressionProperties: {\n        'templateOptions.disabled': '!model.text',\n      },\n    },\n    {\n      key: 'email',\n      type: 'input',\n      templateOptions: {\n        label: 'Email address',\n        placeholder: 'Enter email',\n        required: true,\n      },\n    },\n  ];\n\n  constructor(private toastr: ToastrService) {}\n\n  ngOnInit() {}\n\n  submit() {\n    this.showToast();\n  }\n\n  showToast() {\n    this.toastr.success(JSON.stringify(this.model));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-forms-elements',\n  templateUrl: './elements.component.html',\n})\nexport class FormsElementsComponent implements OnInit {\n  q = {\n    username: '',\n    email: '',\n    gender: '',\n  };\n\n  reactiveForm1: FormGroup;\n  reactiveForm2: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.reactiveForm1 = this.fb.group({\n      username: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      gender: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      company: ['', [Validators.required]],\n      mobile: ['', [Validators.required]],\n      tele: ['', [Validators.required]],\n      website: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n    });\n\n    this.reactiveForm2 = this.fb.group({\n      username: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      gender: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      company: ['', [Validators.required]],\n      mobile: ['', [Validators.required]],\n      tele: ['', [Validators.required]],\n      website: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  getErrorMessage(form: FormGroup) {\n    return form.get('email').hasError('required')\n      ? 'You must enter a value'\n      : form.get('email').hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormsElementsComponent } from './elements/elements.component';\nimport { FormsSelectsComponent } from './selects/selects.component';\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\n\nconst routes: Routes = [\n  { path: 'elements', component: FormsElementsComponent, data: { title: 'Form Elements' } },\n  { path: 'ng-select', component: FormsSelectsComponent, data: { title: 'Ng Select' } },\n  { path: 'dynamic', component: FormsDynamicComponent, data: { title: 'Dynamic Form' } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { FormsRoutingModule } from './forms-routing.module';\n\nimport { FormsElementsComponent } from './elements/elements.component';\nimport { FormsSelectsComponent } from './selects/selects.component';\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\n\nconst COMPONENTS = [FormsElementsComponent, FormsSelectsComponent, FormsDynamicComponent];\nconst COMPONENTS_DYNAMIC = [];\n\n@NgModule({\n  imports: [SharedModule, FormsRoutingModule],\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\n  entryComponents: COMPONENTS_DYNAMIC,\n})\nexport class FormsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Person, DataService } from '../data.service';\n\n@Component({\n  selector: 'app-forms-selects',\n  templateUrl: './selects.component.html',\n  providers: [DataService],\n})\nexport class FormsSelectsComponent implements OnInit {\n  // Data source\n  people$: Observable<Person[]>;\n  people: Person[] = [];\n  selectedPersonId = '5a15b13c36e7a7f00cf0d7cb';\n  selectedPersonId2 = '5a15b13c36e7a7f00cf0d7cb';\n\n  selectedSimpleItem = 'Two';\n  simpleItems = [];\n  disable = true;\n\n  selectedCarId = 3;\n  cars = [\n    { id: 1, name: 'Volvo' },\n    { id: 2, name: 'Saab', disabled: true },\n    { id: 3, name: 'Opel' },\n    { id: 4, name: 'Audi' },\n  ];\n\n  // Tags\n  companies: any[] = [];\n  loading = false;\n  companiesNames = ['Miškas', 'Žalias', 'Flexigen'];\n  selectedCompany = '';\n  selectedCompanyCustom = '';\n  selectedCompanyCustomPromise = '';\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.people$ = this.dataService.getPeople();\n    this.dataService.getPeople().subscribe(items => (this.people = items));\n    this.simpleItems = [true, 'Two', 3];\n\n    this.companiesNames.forEach((c, i) => {\n      this.companies.push({ id: i, name: c });\n    });\n  }\n\n  toggleDisabled() {\n    const car: any = this.cars[1];\n    car.disabled = !car.disabled;\n  }\n\n  addTag(name: string) {\n    return { name, tag: true };\n  }\n\n  addTagPromise(name: string) {\n    return new Promise(resolve => {\n      this.loading = true;\n      setTimeout(() => {\n        resolve({ id: 5, name, valid: true });\n        this.loading = false;\n      }, 1000);\n    });\n  }\n}\n"],"sourceRoot":""}